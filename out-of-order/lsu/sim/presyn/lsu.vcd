$date
	Thu Jun  8 17:30:12 2023
$end

$version
	Synopsys VCS version T-2022.06_Full64
$end

$timescale
	10ps
$end

$comment Csum: 1 cab1e1f7f71c2f0d $end


$scope module lsu_tb $end
$var reg 1 ! clk_i $end
$var reg 1 " reset_i $end
$var reg 32 # pc_i [31:0] $end
$var reg 1 $ lsu_request_i $end
$var reg 32 % inst_i [31:0] $end
$var reg 32 & rs1_value_i [31:0] $end
$var reg 32 ' rs2_value_i [31:0] $end
$var reg 5 ( rob_idx_i [4:0] $end
$var wire 1 ) busy_o $end
$var wire 1 * writeback_valid_o $end
$var wire 32 + writeback_value_o [31:0] $end
$var reg 5 , rob_idx_o [4:0] $end
$var wire 1 - dmem_csb_write_o $end
$var wire 4 . dmem_wmask_o [3:0] $end
$var wire 8 / dmem_waddr_o [7:0] $end
$var wire 32 0 dmem_din_o [31:0] $end
$var wire 1 1 dmem_csb_read_o $end
$var wire 8 2 dmem_raddr_o [7:0] $end
$var wire 32 3 dmem_dout_i [31:0] $end

$scope module lsu $end
$var wire 1 4 clk_i $end
$var wire 1 5 reset_i $end
$var wire 32 6 pc_i [31:0] $end
$var wire 1 7 lsu_request_i $end
$var wire 32 8 inst_i [31:0] $end
$var wire 32 9 rs1_value_i [31:0] $end
$var wire 32 : rs2_value_i [31:0] $end
$var wire 5 ; rob_idx_i [4:0] $end
$var wire 1 ) busy_o $end
$var wire 1 * writeback_valid_o $end
$var wire 32 + writeback_value_o [31:0] $end
$var reg 5 < rob_idx_o [4:0] $end
$var wire 1 - dmem_csb_write_o $end
$var wire 4 . dmem_wmask_o [3:0] $end
$var wire 8 / dmem_waddr_o [7:0] $end
$var wire 32 0 dmem_din_o [31:0] $end
$var wire 1 1 dmem_csb_read_o $end
$var wire 8 2 dmem_raddr_o [7:0] $end
$var wire 32 3 dmem_dout_i [31:0] $end
$var wire 7 = opcode [6:0] $end
$var wire 3 > funct3 [2:0] $end
$var wire 32 ? imm_i [31:0] $end
$var wire 12 @ imm_s [11:0] $end
$var wire 8 A mem_addr_r [7:0] $end
$var wire 8 B mem_addr_w [7:0] $end
$var wire 32 C mem_data_in [31:0] $end
$var reg 4 D wmask [3:0] $end
$var reg 1 E mem_csb_read $end
$var reg 1 F mem_csb_write $end
$var wire 32 G rs1_value [31:0] $end
$var wire 32 H rs2_value [31:0] $end
$var wire 1 I lsb_full $end
$var wire 1 J lsb_empty $end
$var reg 1 K mem_ls $end
$var reg 1 L mem_signed $end
$var reg 1 M mem_h $end
$var reg 1 N mem_b $end
$var reg 8 O lsu_out_addr [7:0] $end
$var reg 1 P lsu_out_ls $end
$var reg 1 Q lsu_out_signed $end
$var reg 1 R lsu_out_h $end
$var reg 1 S lsu_out_b $end
$var reg 1 T mem_load_success $end
$var reg 1 U mem_aligned $end
$var reg 32 V mem_load_data [31:0] $end

$scope module lsu_fifo $end
$var wire 1 4 clk_i $end
$var wire 1 5 reset_i $end
$var wire 1 W wr_i $end
$var wire 1 X rd_i $end
$var wire 12 Y data_in_i [11:0] $end
$var wire 12 Z data_out_o [11:0] $end
$var wire 1 J empty_o $end
$var wire 1 I full_o $end
$var reg 2 [ rd_ptr [1:0] $end
$var reg 2 \ wr_ptr [1:0] $end
$var reg 2 ] fifo_cnt [1:0] $end
$var integer 32 ^ i $end
$upscope $end

$upscope $end

$upscope $end

$enddefinitions $end

#0
$dumpvars
0)
0!
x1
x-
xJ
0I
07
15
xS
xR
xP
xQ
0$
xU
xN
xE
xF
xM
xT
xK
xL
xX
1"
0W
x*
bxxxxxxxxxxxx Z
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 0
bzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz 3
b00xxxxxx 2
b00xxxxxx /
bxxxx .
bxx ]
bxxx >
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ^
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx ?
bxxxxxxxxxxxx @
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx %
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 8
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 6
bxxxxx ;
bxxxxx <
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx 9
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx :
bxxxxxxxx O
bxxxxxxxx B
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx C
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx V
bxxxxxxx =
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx #
bxx [
bxxxxx (
bxxxxx ,
bzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz G
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx &
bzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz H
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx '
bxxxx D
bxx \
bxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx +
bxxxxxxxxxxxx Y
bxxxxxxxx A
04
$end
#500
1!
14
b00000000000000000000000000000100 ^
b00 \
b00 [
b000000000000 Z
b00000000 O
0P
0Q
0R
0S
b00000000000000000000000000000000 V
b00000000000000000000000000000000 +
#1000
0"
05
b00000000000000000000000000000000 %
b00000000000000000000000000000000 8
b0000000xxxxx @
b000000000000 @
b00000000000000000000xxxxxxxxxxxx ?
b00000000000000000000000000000000 ?
b000 >
b0000000 =
0!
04
0U
b0000 D
b0000 .
0N
0M
0L
0K
1F
1-
1E
11
bxxxxxxxx0000 Y
#1500
1!
14
b00000000001000001010001000100011 %
b00000000001000001010001000100011 8
b000000000100 @
b00000000000000000000000000000010 ?
b010 >
b0100011 =
b00000000000000000000000000000000 &
b00000000000000000000000000000000 9
b00000000000000001111111111111111 '
b00000000000000001111111111111111 :
b00000000000000001111111111111111 C
b00000000000000001111111111111111 0
1$
17
1W
xU
0F
0-
b00000100 B
b00000001 /
b00000010 A
b00000000 2
b000000100000 Y
1U
b1111 D
b1111 .
0T
0X
0*
b00 ]
1J
b01 \
b0x [
bxxxxxxxxxxxx Z
bxxxxxxxx O
xP
xQ
xR
xS
#2000
0!
04
#2500
1!
14
b00000000000000000000000000000000 %
b00000000000000000000000000000000 8
b000000000000 @
b00000000000000000000000000000000 ?
b000 >
b0000000 =
b00000000000000000000000000000000 '
b00000000000000000000000000000000 :
b00000000000000000000000000000000 C
b00000000000000000000000000000000 0
0$
07
0W
b00000000 B
b00000000 /
b00000000 A
0U
b0000 D
b0000 .
1F
1-
b000000000000 Y
1T
1X
1*
#3000
0!
04
#3500
1!
14
0T
0X
0*
bxx [
#4000
0!
04
#4500
1!
14
#5000
0!
04
#5500
1!
14
#6000
0!
04
#6500
1!
14
b00000000010000000000000110000011 %
b00000000010000000000000110000011 8
b000000000011 @
b00000000000000000000000000000100 ?
b0000011 =
1$
17
1W
b00000011 B
b00000100 A
b00000001 2
0E
01
b000001000000 Y
b10 \
#7000
0!
04
#7500
1!
14
b00000000000000000000000000000000 %
b00000000000000000000000000000000 8
b000000000000 @
b00000000000000000000000000000000 ?
b0000000 =
0$
07
0W
b00000000 B
b00000000 A
b00000000 2
1E
11
b000000000000 Y
1T
1X
1*
#8000
0!
04
#8500
1!
14
0T
0X
0*
#9000
0!
04
#9500
1!
14
#10000
0!
04
#10500
1!
14
#11000
0!
04
#11500
1!
14
#12000
0!
04
